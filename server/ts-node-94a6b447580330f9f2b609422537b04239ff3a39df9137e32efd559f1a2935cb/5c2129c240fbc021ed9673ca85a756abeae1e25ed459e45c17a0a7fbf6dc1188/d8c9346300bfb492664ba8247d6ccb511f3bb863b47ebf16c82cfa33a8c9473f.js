"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("dotenv").config();
var express = require("express");
var morgan = require("morgan");
var bodyParser = require("body-parser");
var swaggerUi = require("swagger-ui-express");
var app_1 = require("./configurations/app");
var v1_1 = require("./routes/v1");
require("reflect-metadata");
var typeorm_1 = require("typeorm");
var app = express();
/*Configuration*/
app.use(morgan("dev")); // req logging
app.use(bodyParser.json()); // parsing json req formats
app.use(bodyParser.urlencoded({ extended: true })); // parsing form req formats
app.disable("etag");
var swaggerDocument = require("./swagger.json");
app.use("/swagger", swaggerUi.serve, swaggerUi.setup(swaggerDocument));
/*Routes*/
v1_1.default(app);
/*RunServer*/
app.listen(app_1.default.port);
console.log("Server has successfully started on PORT: " + app_1.default.port);
typeorm_1.createConnection().catch(function (err) { return console.error("Failed to create connection to PostgreSQL\n" + err); });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL3Vzci9zcmMvYXBwL2ludGVybmFkby1zZXJ2ZXIvc2VydmVyLnRzIiwic291cmNlcyI6WyIvdXNyL3NyYy9hcHAvaW50ZXJuYWRvLXNlcnZlci9zZXJ2ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDM0IsaUNBQW1DO0FBQ25DLCtCQUFpQztBQUNqQyx3Q0FBMEM7QUFDMUMsOENBQWdEO0FBQ2hELDRDQUE2QztBQUM3QyxrQ0FBaUM7QUFDakMsNEJBQTBCO0FBQzFCLG1DQUF5QztBQUV6QyxJQUFNLEdBQUcsR0FBd0IsT0FBTyxFQUFFLENBQUM7QUFFM0MsaUJBQWlCO0FBQ2pCLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFjO0FBQ3RDLEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQywyQkFBMkI7QUFDdkQsR0FBRyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsVUFBVSxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLDJCQUEyQjtBQUMvRSxHQUFHLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBRXBCLElBQU0sZUFBZSxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0FBQ2xELEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLFNBQVMsQ0FBQyxLQUFLLEVBQUUsU0FBUyxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO0FBRXZFLFVBQVU7QUFDVixZQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7QUFFWixhQUFhO0FBQ2IsR0FBRyxDQUFDLE1BQU0sQ0FBQyxhQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDM0IsT0FBTyxDQUFDLEdBQUcsQ0FBQywyQ0FBMkMsR0FBRyxhQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7QUFFMUUsMEJBQWdCLEVBQUUsQ0FBQyxLQUFLLENBQUMsVUFBQyxHQUFHLElBQUssT0FBQSxPQUFPLENBQUMsS0FBSyxDQUFDLDZDQUE2QyxHQUFHLEdBQUcsQ0FBQyxFQUFsRSxDQUFrRSxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKFwiZG90ZW52XCIpLmNvbmZpZygpO1xuaW1wb3J0ICogYXMgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0ICogYXMgbW9yZ2FuIGZyb20gXCJtb3JnYW5cIjtcbmltcG9ydCAqIGFzIGJvZHlQYXJzZXIgZnJvbSBcImJvZHktcGFyc2VyXCI7XG5pbXBvcnQgKiBhcyBzd2FnZ2VyVWkgZnJvbSBcInN3YWdnZXItdWktZXhwcmVzc1wiO1xuaW1wb3J0IGFwcENvbmZpZyBmcm9tIFwiLi9jb25maWd1cmF0aW9ucy9hcHBcIjtcbmltcG9ydCByb3V0ZXIgZnJvbSBcIi4vcm91dGVzL3YxXCI7XG5pbXBvcnQgXCJyZWZsZWN0LW1ldGFkYXRhXCI7XG5pbXBvcnQge2NyZWF0ZUNvbm5lY3Rpb259IGZyb20gXCJ0eXBlb3JtXCI7XG5cbmNvbnN0IGFwcDogZXhwcmVzcy5BcHBsaWNhdGlvbiA9IGV4cHJlc3MoKTtcblxuLypDb25maWd1cmF0aW9uKi9cbmFwcC51c2UobW9yZ2FuKFwiZGV2XCIpKTsgLy8gcmVxIGxvZ2dpbmdcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpOyAvLyBwYXJzaW5nIGpzb24gcmVxIGZvcm1hdHNcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpOyAvLyBwYXJzaW5nIGZvcm0gcmVxIGZvcm1hdHNcbmFwcC5kaXNhYmxlKFwiZXRhZ1wiKTtcblxuY29uc3Qgc3dhZ2dlckRvY3VtZW50ID0gcmVxdWlyZShcIi4vc3dhZ2dlci5qc29uXCIpO1xuYXBwLnVzZShcIi9zd2FnZ2VyXCIsIHN3YWdnZXJVaS5zZXJ2ZSwgc3dhZ2dlclVpLnNldHVwKHN3YWdnZXJEb2N1bWVudCkpO1xuXG4vKlJvdXRlcyovXG5yb3V0ZXIoYXBwKTtcblxuLypSdW5TZXJ2ZXIqL1xuYXBwLmxpc3RlbihhcHBDb25maWcucG9ydCk7XG5jb25zb2xlLmxvZyhcIlNlcnZlciBoYXMgc3VjY2Vzc2Z1bGx5IHN0YXJ0ZWQgb24gUE9SVDogXCIgKyBhcHBDb25maWcucG9ydCk7XG5cbmNyZWF0ZUNvbm5lY3Rpb24oKS5jYXRjaCgoZXJyKSA9PiBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGNyZWF0ZSBjb25uZWN0aW9uIHRvIFBvc3RncmVTUUxcXG5cIiArIGVycikpO1xuIl19