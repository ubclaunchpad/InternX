"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("dotenv").config();
var express = require("express");
var morgan = require("morgan");
var bodyParser = require("body-parser");
var swaggerUi = require("swagger-ui-express");
// const swaggerUi = require("swagger-ui-express");
var app_1 = require("./configurations/app");
var v1_1 = require("./routes/v1");
require("reflect-metadata");
var typeorm_1 = require("typeorm");
var app = express();
/*Configuration*/
app.use(morgan("dev")); // req logging
app.use(bodyParser.json()); // parsing json req formats
app.use(bodyParser.urlencoded({ extended: true })); // parsing form req formats
app.disable("etag");
var swaggerDocument = require("./swagger.json");
app.use("/swagger", swaggerUi.serve, swaggerUi.setup(swaggerDocument));
/*Routes*/
v1_1.default(app);
/*RunServer*/
app.listen(app_1.default.port);
console.log("Server has successfully started on PORT: " + app_1.default.port);
typeorm_1.createConnection().catch(function (err) {
    return console.error("Failed to create connection to PostgreSQL\n" + err);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL3Vzci9zcmMvYXBwL2ludGVybmFkby1zZXJ2ZXIvc2VydmVyLnRzIiwic291cmNlcyI6WyIvdXNyL3NyYy9hcHAvaW50ZXJuYWRvLXNlcnZlci9zZXJ2ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDM0IsaUNBQW1DO0FBQ25DLCtCQUFpQztBQUNqQyx3Q0FBMEM7QUFDMUMsOENBQWdEO0FBQ2hELG1EQUFtRDtBQUNuRCw0Q0FBNkM7QUFDN0Msa0NBQWlDO0FBQ2pDLDRCQUEwQjtBQUMxQixtQ0FBMkM7QUFFM0MsSUFBTSxHQUFHLEdBQXdCLE9BQU8sRUFBRSxDQUFDO0FBRTNDLGlCQUFpQjtBQUNqQixHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsY0FBYztBQUN0QyxHQUFHLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsMkJBQTJCO0FBQ3ZELEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQywyQkFBMkI7QUFDL0UsR0FBRyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUVwQixJQUFNLGVBQWUsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUNsRCxHQUFHLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSxTQUFTLENBQUMsS0FBSyxFQUFFLFNBQVMsQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQztBQUV2RSxVQUFVO0FBQ1YsWUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBRVosYUFBYTtBQUNiLEdBQUcsQ0FBQyxNQUFNLENBQUMsYUFBUyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQzNCLE9BQU8sQ0FBQyxHQUFHLENBQUMsMkNBQTJDLEdBQUcsYUFBUyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBRTFFLDBCQUFnQixFQUFFLENBQUMsS0FBSyxDQUFDLFVBQUMsR0FBRztJQUMzQixPQUFBLE9BQU8sQ0FBQyxLQUFLLENBQUMsNkNBQTZDLEdBQUcsR0FBRyxDQUFDO0FBQWxFLENBQWtFLENBQ25FLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKFwiZG90ZW52XCIpLmNvbmZpZygpO1xuaW1wb3J0ICogYXMgZXhwcmVzcyBmcm9tIFwiZXhwcmVzc1wiO1xuaW1wb3J0ICogYXMgbW9yZ2FuIGZyb20gXCJtb3JnYW5cIjtcbmltcG9ydCAqIGFzIGJvZHlQYXJzZXIgZnJvbSBcImJvZHktcGFyc2VyXCI7XG5pbXBvcnQgKiBhcyBzd2FnZ2VyVWkgZnJvbSBcInN3YWdnZXItdWktZXhwcmVzc1wiO1xuLy8gY29uc3Qgc3dhZ2dlclVpID0gcmVxdWlyZShcInN3YWdnZXItdWktZXhwcmVzc1wiKTtcbmltcG9ydCBhcHBDb25maWcgZnJvbSBcIi4vY29uZmlndXJhdGlvbnMvYXBwXCI7XG5pbXBvcnQgcm91dGVyIGZyb20gXCIuL3JvdXRlcy92MVwiO1xuaW1wb3J0IFwicmVmbGVjdC1tZXRhZGF0YVwiO1xuaW1wb3J0IHsgY3JlYXRlQ29ubmVjdGlvbiB9IGZyb20gXCJ0eXBlb3JtXCI7XG5cbmNvbnN0IGFwcDogZXhwcmVzcy5BcHBsaWNhdGlvbiA9IGV4cHJlc3MoKTtcblxuLypDb25maWd1cmF0aW9uKi9cbmFwcC51c2UobW9yZ2FuKFwiZGV2XCIpKTsgLy8gcmVxIGxvZ2dpbmdcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpOyAvLyBwYXJzaW5nIGpzb24gcmVxIGZvcm1hdHNcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpOyAvLyBwYXJzaW5nIGZvcm0gcmVxIGZvcm1hdHNcbmFwcC5kaXNhYmxlKFwiZXRhZ1wiKTtcblxuY29uc3Qgc3dhZ2dlckRvY3VtZW50ID0gcmVxdWlyZShcIi4vc3dhZ2dlci5qc29uXCIpO1xuYXBwLnVzZShcIi9zd2FnZ2VyXCIsIHN3YWdnZXJVaS5zZXJ2ZSwgc3dhZ2dlclVpLnNldHVwKHN3YWdnZXJEb2N1bWVudCkpO1xuXG4vKlJvdXRlcyovXG5yb3V0ZXIoYXBwKTtcblxuLypSdW5TZXJ2ZXIqL1xuYXBwLmxpc3RlbihhcHBDb25maWcucG9ydCk7XG5jb25zb2xlLmxvZyhcIlNlcnZlciBoYXMgc3VjY2Vzc2Z1bGx5IHN0YXJ0ZWQgb24gUE9SVDogXCIgKyBhcHBDb25maWcucG9ydCk7XG5cbmNyZWF0ZUNvbm5lY3Rpb24oKS5jYXRjaCgoZXJyKSA9PlxuICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGNyZWF0ZSBjb25uZWN0aW9uIHRvIFBvc3RncmVTUUxcXG5cIiArIGVycilcbik7XG4iXX0=