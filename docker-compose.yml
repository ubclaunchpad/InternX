version: '3'
services:

  ### Job SERVER ###
  job_server:
    build: ./job_server
    expose:
      - ${JOB_APP_PORT}
    environment:
      # Application Configurations
      APP_ENVIROMENT: ${JOB_APP_ENVIROMENT}
      APP_PORT: ${JOB_APP_PORT}
      # TypeORM(postgress db) configurations
      TYPEORM_CONNECTION: ${DB_DIALECT}
      TYPEORM_HOST: ${DB_HOST}
      TYPEORM_USERNAME: ${DB_USERNAME}
      TYPEORM_PASSWORD: ${DB_PASSWORD}
      TYPEORM_DATABASE: ${DB_NAME}
      TYPEORM_PORT: ${DB_PORT}
      TYPEORM_SYNCHRONIZE: ${TYPEORM_SYNCHRONIZE}
      TYPEORM_LOGGING: ${TYPEORM_LOGGING}
      TYPEORM_ENTITIES: ${TYPEORM_ENTITIES}
      # Wait script for db to start
      WAIT_SLEEP_INTERVAL: ${WAIT_SLEEP_INTERVAL}
      WAIT_HOSTS_TIMEOUT: ${WAIT_HOSTS_TIMEOUT}
      WAIT_HOSTS: ${DB_HOST}:${DB_PORT}
    ports: #HOST:CONTAINER
      - ${JOB_APP_PORT}:${JOB_APP_PORT}
    depends_on:
      - ${DB_HOST}

  ### Authentication Server ###
  auth_server:
    build: ./auth_server
    expose:
      - ${AUTH_APP_PORT}
    environment:
      # Application Configurations
      APP_ENVIROMENT: ${AUTH_APP_ENVIROMENT}
      APP_PORT: ${AUTH_APP_PORT}
      # JWT Configuration
      JWT_ENCRYPTION: ${AUTH_JWT_ENCRYPTION}
      JWT_EXPIRATION: ${AUTH_JWT_EXPIRATION}
      # TypeORM(postgress db) configurations
      TYPEORM_CONNECTION: ${DB_DIALECT}
      TYPEORM_HOST: ${DB_HOST}
      TYPEORM_USERNAME: ${DB_USERNAME}
      TYPEORM_PASSWORD: ${DB_PASSWORD}
      TYPEORM_DATABASE: ${DB_NAME}
      TYPEORM_PORT: ${DB_PORT}
      TYPEORM_SYNCHRONIZE: ${TYPEORM_SYNCHRONIZE}
      TYPEORM_LOGGING: ${TYPEORM_LOGGING}
      TYPEORM_ENTITIES: ${TYPEORM_ENTITIES}
      # Wait script for db to start
      WAIT_SLEEP_INTERVAL: ${WAIT_SLEEP_INTERVAL}
      WAIT_HOSTS_TIMEOUT: ${WAIT_HOSTS_TIMEOUT}
      WAIT_HOSTS: ${DB_HOST}:${DB_PORT}
    ports: #HOST:CONTAINER
      - ${AUTH_APP_PORT}:${AUTH_APP_PORT}
    depends_on:
      - ${DB_HOST}
    
  #### DATABASE ###
  postgres:
    image: postgres:latest
    restart: ${DB_RESTART}
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - database_data:/var/lib/postgresql/data
      - ./database_config/init.sql:/docker-entrypoint-initdb.d/init.sql
      
  adminer:
    image: adminer
    restart: ${ADMINER_RESTART}
    depends_on:
      - ${DB_HOST}
    ports:
      - ${ADMINER_PORT}:${ADMINER_PORT}
  
  ### NGINX ###
  nginx:
    image: nginx:stable-alpine
    volumes:
      - "/etc/letsencrypt:/etc/letsencrypt"
      - "/usr/share/nginx/html:/usr/share/nginx/html"
      - "/usr/share/internado_public/html:/usr/share/internado_public/html"
      - "/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
    ports:
      - 80:80
      - 443:443
    depends_on:
      - auth_server
      - job_server

volumes:
  database_data:
    driver: local