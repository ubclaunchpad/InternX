version: '3'
services:

  # ### SERVER ###
  # server:
  #   build: ./server
  #   expose:
  #     - ${API_SERVER_PORT}
  #   environment:
  #     API_HOST: ${API_HOST}
  #     API_SERVER_PORT: ${API_SERVER_PORT}
  #     WAIT_SLEEP_INTERVAL: 60
  #     WAIT_HOSTS_TIMEOUT: 600
  #     WAIT_HOSTS: postgres:5432
  #     TYPEORM_CONNECTION: "postgres"
  #     TYPEORM_HOST: postgres
  #     TYPEORM_USERNAME: "admin"
  #     TYPEORM_PASSWORD: "admin"
  #     TYPEORM_DATABASE: "internado"
  #     TYPEORM_PORT: 5432
  #     TYPEORM_SYNCHRONIZE: "true"
  #     TYPEORM_LOGGING: "true"
  #     TYPEORM_ENTITIES: "models/**/*.js"
  #   volumes:
  #     - ./server:/usr/src/app/internado-server
  #     - /app/node_modules
  #   ports: #HOST:CONTAINER
  #     - ${API_SERVER_PORT}:${API_SERVER_PORT}
  #   depends_on:
  #     - "postgres"

  ### Authentication Server ###
  auth:
    build: ./auth
    expose:
      - ${AUTH_APP_PORT}
    environment:
      # Application Configurations
      APP_ENVIROMENT: ${AUTH_APP_ENVIROMENT}
      APP_PORT: ${AUTH_APP_PORT}
      # JWT Configuration
      JWT_ENCRYPTION: ${AUTH_JWT_ENCRYPTION}
      JWT_EXPIRATION: ${AUTH_JWT_EXPIRATION}
      # TypeORM(postgress db) configurations
      TYPEORM_CONNECTION: ${DB_DIALECT}
      TYPEORM_HOST: ${DB_HOST}
      TYPEORM_USERNAME: ${DB_USERNAME}
      TYPEORM_PASSWORD: ${DB_PASSWORD}
      TYPEORM_DATABASE: ${DB_NAME}
      TYPEORM_PORT: ${DB_PORT}
      TYPEORM_SYNCHRONIZE: ${TYPEORM_SYNCHRONIZE}
      TYPEORM_LOGGING: ${TYPEORM_LOGGING}
      TYPEORM_ENTITIES: ${TYPEORM_ENTITIES}
      # Wait script for db to start
      WAIT_SLEEP_INTERVAL: ${WAIT_SLEEP_INTERVAL}
      WAIT_HOSTS_TIMEOUT: ${WAIT_HOSTS_TIMEOUT}
      WAIT_HOSTS: ${DB_HOST}:${DB_PORT}
    volumes:
      - ./auth/dist:/usr/src/app/internado-auth/dist
    ports: #HOST:CONTAINER
      - ${AUTH_APP_PORT}:${AUTH_APP_PORT}
    depends_on:
      - ${DB_HOST}
    
  #### DATABASE ###
  postgres:
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: internado
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - database_data:/var/lib/postgresql/data
      - ./database_config/init.sql:/docker-entrypoint-initdb.d/init.sql
      
  adminer:
    image: adminer
    restart: always
    depends_on:
      - "postgres"
    ports:
      - 8080:8080

  # ### CLIENT ###
  # client:
  #   build: ./client
  #   environment:
  #     CLIENT_PORT: ${CLIENT_PORT}
  #   expose:
  #     - ${CLIENT_PORT}
  #   volumes:
  #     - ./client/src:/usr/src/app/internado-client/src
  #     - /app/node_modules
  #   ports: #HOST:CONTAINER
  #     - ${CLIENT_PORT}:${CLIENT_PORT}
  #   links:
  #     # - server
  #     - auth
  #   command: npm start

volumes:
  database_data:
    driver: local